openapi: 3.0.0
info:
  title: StepByStep API
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/conversation/{conversation_id}/step':
    post:
      summary: start a step by step conversation
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
              examples:
                example-1:
                  value:
                    id: w6BN6LeMeFYI
                    ref: d3ee3fd4-6099-4bdb-99fa-8eb830691cc4
                    title: 'Welcome to the Step-by-Step API Demo Form!'
                    properties:
                      show_button: true
                      button_text: Start
                    attachment:
                      type: image
                      href: 'https://images.typeform.com/images/67D6EVTHzuH5'
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: post-start
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                field_id:
                  type: string
                value:
                  type: string
              required:
                - value
            examples:
              Fav color:
                value:
                  form_id: Xc1v7Sis
                  name: get form color
        description: ''
      description: ''
    parameters:
      - schema:
          type: string
        name: conversation_id
        in: path
        required: true
  '/conversation/{conversation_id}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
              examples:
                example-1: {}
      operationId: get-conversation
      description: get conversation details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    parameters:
      - schema:
          type: string
        name: conversation_id
        in: path
        required: true
    put:
      summary: ''
      operationId: put-conversation-conversation_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
              examples: {}
      description: change state of conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum:
                    - start
                    - end
                    - ongoing
                    - aborted
                    - submitted
            examples:
              start conversation:
                value:
                  state: start
  /conversation:
    post:
      summary: create a new conversation
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation_id:
                    type: string
                    format: uuid
                  form_id:
                    type: string
                    description: The human-readable name of this conversation.
                  url:
                    type: string
                    format: uri
                    description: conversation interface
                  state:
                    type: string
                    default: ready
        '':
          description: ''
      operationId: post-conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: string
                  pattern: '([0-9a-zA-Z]{6,8})'
                name:
                  type: string
              required:
                - form_id
  '/conversation/{conversation_id}/submit':
    parameters:
      - schema:
          type: string
        name: conversation_id
        in: path
        required: true
    post:
      summary: submit conversation results
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: post-conversation-conversation_id-submit
      requestBody:
        content:
          application/json:
            schema:
              type: object
components:
  schemas:
    Conversation:
      title: Conversation
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
        state:
          type: string
          enum:
            - start
            - end
            - submitted
            - ongoing
            - abandonned
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        metadata:
          type: object
          properties:
            user-agent:
              type: string
    Step:
      title: Step
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        conversation_id:
          type: string
          format: uuid
        conversation_state:
          type: string
        start_date:
          type: string
          format: time
        field:
          $ref: '#/components/schemas/Field'
    Field:
      title: Field
      type: object
      properties:
        id:
          type: string
          format: uuid
        ref:
          type: string
          format: uuid
        title:
          type: string
        computed_title:
          type: string
        type:
          type: string
          enum:
            - welcome_screen
            - thankyou_screen
            - short_text
            - long_text
            - multiple_choice
            - picture_choice
            - file_upload
            - opinion_scale
            - rating
            - phone_number
            - statement
            - yes_no
            - email
            - date
            - number
            - dropdown
            - legal
            - payment
            - website
        properties:
          type: object
          properties:
            button_text:
              type: string
            randomize:
              type: boolean
            choices:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
        attachment:
          type: object
          properties:
            type:
              type: string
              enum:
                - image
              example: image
            href:
              type: string
              format: uri
        validations:
          type: object
          properties:
            required:
              type: boolean
